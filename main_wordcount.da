# @PydevCodeAnalysisIgnore
'''
Created on Nov 14, 2012

@author: KSC
'''

dist_source(".", "MapReduceAPI.da")
from MapReduceAPI import MapReduceAPI



def Counter(input):
    '''
    User Map function
    Sanitize the string and report (word, count) for each word
    '''
    filename = input
    output = list()
    
    import string
    TT = ''.maketrans(string.punctuation, ' ' * len(string.punctuation))  # Translation Table

    print('<MapFunc> Counter: Reading', str(filename))

    with open(filename, 'rt') as f:
        for line in f:
            line = line.translate(TT)  # strip punctuation
            for word in line.split():
                word = word.lower()
                output.append((word, 1))
    
    return output


def Adder(input):
    '''
    User Reduce function
    Add all the values for a key
    '''
    (key, values) = input
#    print('<ReduceFunc> Adder: Reducing', str(key))
    return (key, sum(values))


def ModuloFirstLetter(kv):
    '''
    User Partition function
    Partition mapped values by their key
    '''
    (key, value) = kv
    return (ord(key[0]) % 4)


def main():

    MRAPI = MapReduceAPI()
    MRAPI.inputFile = str(sys.argv[1]) if len(sys.argv) > 1 else "./inputFile.txt"
    MRAPI.inputSplitSize = int(sys.argv[2]) if len(sys.argv) > 1 else 3
    MRAPI.noOfMapWorkers = int(sys.argv[3]) if len(sys.argv) > 1 else 2
    MRAPI.noOfReduceWorkers = int(sys.argv[4]) if len(sys.argv) > 1 else 2
    MRAPI.mapFunc = Counter
    MRAPI.reduceFunc = Adder
    MRAPI.partitionerFunc = ModuloFirstLetter
    MRAPI.combinerFunc = Adder
    MRAPI.workerTimeout = 6  # seconds
    MRAPI.skipBadRecords = True
    MRAPI.orderingGaurantee = True
    MRAPI.debugFlag = True
    
    MRAPI.execute()
    
